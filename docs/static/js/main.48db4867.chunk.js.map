{"version":3,"sources":["assets/defaultGamePreview.png","App.module.scss","Components/Game.module.scss","Components/Header.tsx","Components/LinkButton.tsx","Components/GamePreview.tsx","Components/Game.tsx","Components/GameList.tsx","Components/MainBody.tsx","App.tsx","serviceWorker.ts","index.tsx","Components/Header.module.scss"],"names":["module","exports","__webpack_require__","p","App","Game","GameName","GameDate","GameDescription","Header","_this","this","react_default","a","createElement","className","styles","HeaderList","Links","index_es","variant","color","onClick","window","open","props","resumeLink","Component","LinkButton","linkText","DEFAULT_TEXT","href","destination","Player","require","GamePreview","lib","emulateTouch","showStatus","infiniteLoop","transitionTime","media","map","isVideo","src","poster","previewImg","defaultImage","container","direction","justify","alignItems","spacing","item","xs","GamePreview_GamePreview","preview","name","date","description","desc","key","LinkButton_LinkButton","link","GameList","gameListProps","pathToHarmony","dreamworld","gameProps","React","MainBody","GameListHolder","GameList_GameList","Header_Header","MainBody_MainBody","Boolean","location","hostname","match","theme","createMuiTheme","palette","primary","main","dark","secondary","light","error","overrides","ReactDOM","render","Fragment","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48db4867.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultGamePreview.fe0a9e00.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1d5Tn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__O57Vz\",\"GameName\":\"Game_GameName__3u4VF\",\"GameDate\":\"Game_GameDate__tIXqa\",\"GameDescription\":\"Game_GameDescription__3BJ9n\"};","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport styles from './Header.module.scss';\r\n\r\nexport interface IHeaderProps {\r\n\tresumeLink?: string;\r\n}\r\n\r\nexport default class Header extends Component<IHeaderProps> {\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Alice Kalok</h2>\r\n\t\t\t\t<ul className={styles.HeaderList}>\r\n\t\t\t\t\t<li>alice.ava.moh@gmail.com</li>\r\n\t\t\t\t\t<div className={styles.Links}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => { window.open(this.props.resumeLink) }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tResume\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport styles from './LinkButton.module.scss';\r\n\r\nexport interface ILinkButtonProps {\r\n\tlinkText?: string;\r\n\tdestination: string;\r\n}\r\n\r\nexport default class LinkButton extends Component<ILinkButtonProps> {\r\n\r\n\tstatic readonly DEFAULT_TEXT = \"Download\";\r\n\r\n\trender(): JSX.Element {\r\n\r\n\t\tlet linkText: string = (this.props.linkText) ? this.props.linkText : LinkButton.DEFAULT_TEXT;\r\n\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\thref={this.props.destination}\r\n\t\t\t>\r\n\t\t\t\t<div>{linkText}</div>\r\n\t\t\t</Button>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport styles from './GamePreview.module.scss';\r\nimport defaultImage from \"../assets/defaultGamePreview.png\";\r\nconst Player = require('video-react');\r\n\r\n\r\nexport interface IGamePreviewMedia {\r\n\tisVideo: boolean;\r\n\tsrc: string;\r\n\tpreviewImg?: string;\r\n}\r\n\r\nexport interface IGamePreviewProps {\r\n\tmedia: IGamePreviewMedia[];\r\n}\r\n\r\nexport default class GamePreview extends Component<IGamePreviewProps> {\r\n\r\n\t// private static readonly defaultImage: string = \"assets/defaultGamePreview.png\";\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Carousel\r\n\t\t\t\temulateTouch={true}\r\n\t\t\t\tshowStatus={false}\r\n\t\t\t\tinfiniteLoop={true}\r\n\t\t\t\ttransitionTime={500}\r\n\t\t\t>\r\n\t\t\t\t{this.props.media ?\r\n\t\t\t\t\tthis.props.media.map((media) => {\r\n\t\t\t\t\t\tmedia.isVideo ?\r\n\t\t\t\t\t\t<Player\r\n\t\t\t\t\t\t\tsrc={media.src}\r\n\t\t\t\t\t\t\tposter={media.previewImg}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={media.src}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t})\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={defaultImage} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t</Carousel>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LinkButton, { ILinkButtonProps } from \"./LinkButton\";\r\nimport GamePreview, { IGamePreviewProps } from \"./GamePreview\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport styles from './Game.module.scss';\r\n\r\nexport interface IGameProps {\r\n\tdescription: string[];\r\n\t// private tags?: Tag[{]; //I may come back to the idea of tags. or not!\r\n\tlink: ILinkButtonProps;\r\n\tpreview: IGamePreviewProps; //Media preview. Screen shots, trailers, gameplay, etc.\r\n\tdate: string;\r\n\tname: string;\r\n\tkey: string;\r\n}\r\n\r\nexport default class Game extends Component<IGameProps> {\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tclassName={styles.Game}\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t\tspacing={16}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={7}>\r\n\t\t\t\t\t<GamePreview\r\n\t\t\t\t\t\t{...this.props.preview}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t\t\t\tclassName={styles.GameDescription}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid className={styles.GameName} item xs={8}>\r\n\t\t\t\t\t\t\t<p >{this.props.name}</p>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid className={styles.GameDate} item xs={4}>\r\n\t\t\t\t\t\t\t<p >{this.props.date}</p>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid className={styles.GameDescription} item xs={12}>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{this.props.description.map(desc => <li key={desc}>{desc}</li>)}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t<LinkButton\r\n\t\t\t\t\t\t\t\t{...this.props.link}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport Game, { IGameProps } from \"./Game\";\r\n// import dreamworld1 from \"../assets/dreamworld1.png\";\r\n// import dreamworld2 from \"../assets/dreamworld2.png\";\r\n// import dreamworldVideo from \"../assets/dreamworldVideo.mp4\";\r\nimport styles from './GameList.module.scss';\r\n\r\nexport default class GameList extends Component {\r\n\r\n\tprivate gameListProps: IGameProps[] = [\r\n\t\tGameList.pathToHarmony,\r\n\t\tGameList.dreamworld,\r\n\t]\r\n\r\n\trender(): JSX.Element[] {\r\n\t\treturn (\r\n\t\t\tthis.gameListProps.map(gameProps => React.createElement(Game, gameProps, null))\r\n\t\t);\r\n\t}\r\n\r\n\tprivate static readonly pathToHarmony: IGameProps = {\r\n\t\tdescription: [\r\n\t\t\t\"Lead a team of 20 to create a turn based tactics game\",\r\n\t\t\t\"asdf\",\r\n\t\t],\r\n\t\tlink: {\r\n\t\t\tdestination: \"https://github.com/Cinnamon18/PathToHarmony/Builds\"\r\n\t\t},\r\n\t\tpreview: {\r\n\t\t\tmedia: [\r\n\r\n\t\t\t]\r\n\t\t},\r\n\t\tdate: \"December 2018\",\r\n\t\tname: \"Path to Harmony\",\r\n\t\tkey: \"1\",\r\n\t};\r\n\r\n\tprivate static readonly dreamworld: IGameProps = {\r\n\t\tdescription: [\r\n\t\t\t\"created environmetn art\",\r\n\t\t\t\"asdf\",\r\n\t\t],\r\n\t\tlink: {\r\n\t\t\tlinkText: \"Play Online\",\r\n\t\t\tdestination: \"https://revengeracer.itch.io/dreamworld\"\r\n\t\t},\r\n\t\tpreview: {\r\n\t\t\tmedia: [\r\n\t\t\t\t// { isVideo: false, src: dreamworldVideo, previewImg: dreamworld1},\r\n\t\t\t\t// { isVideo: false, src: dreamworld1},\r\n\t\t\t\t// { isVideo: false, src: dreamworld2},\r\n\t\t\t]\r\n\t\t},\r\n\t\tdate: \"June 2017\",\r\n\t\tname: \"Dreamworld\",\r\n\t\tkey: \"2\",\r\n\t};\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport GameList from \"./GameList\";\r\nimport styles from './MainBody.module.scss';\r\n\r\nexport default class MainBody extends Component {\r\n\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div className={styles.GameListHolder}>\r\n\t\t\t\t<GameList />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Header from './Components/Header';\nimport MainBody from './Components/MainBody';\nimport styles from './App.module.scss';\n// import resumeLink from \"./assets/KalokAResume.pdf\";\n\nclass App extends Component {\n\n\trender(): JSX.Element {\n\t\treturn (\n\t\t\t<div className={styles.App}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\tspacing={8}>\n\t\t\t\t\t{/* .TODO: do this differently on mobile. . make it reponsive */}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t// resumeLink={resumeLink}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<MainBody />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* <Button variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\tHello World\n    \t\t\t\t</Button> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { CssBaseline } from '@material-ui/core';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\t// light: '#eed1ff',\n\t\t\tmain: '#bba0e5',\n\t\t\tdark: '#a38cd8',\n\t\t\t// contrastText: ,\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: '#deecff',\n\t\t\tmain: '#acbae5',\n\t\t\tdark: '#90ace5',\n\t\t\t// contrastText: ,\n\t\t},\n\t\terror: {\n\t\t\t// light: ,\n\t\t\tmain: '#d836d3',\n\t\t\t// dark: ,\n\t\t\t// contrastText: ,\n\t\t},\n\t},\n\n\t//Use this like the demo below to change specific UI elements!\n\toverrides: {\n\t\t// MuiButton: { // Name of the component ⚛️ / style sheet\n\t\t//   root: { // Name of the rule\n\t\t// \tcolor: 'white', // Some CSS\n\t\t//   },\n\t\t// },\n\t},\n\n});\n\n//Do something vaguely like this to style a custom component\n// const styles = createStyles({\n// \troot: {\n// \t  display: 'flex',\n// \t  flexDirection: 'column',\n// \t},\n//   });  \n// CustomCheckbox = withStyles(styles)(CustomCheckbox);\n{/* <CustomCheckbox /> */}\n\nReactDOM.render(MyApp(), document.getElementById('root'));\n\nfunction MyApp() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* <CssBaseline /> */}\n\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t<App />\n\t\t\t</MuiThemeProvider>\n\t\t</React.Fragment>\n\t);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderList\":\"Header_HeaderList__1gSC7\",\"Links\":\"Header_Links__2rZPj\"};"],"sourceRoot":""}